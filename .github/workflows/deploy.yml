name: Deploy Flask App

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    name: Build Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)

  push:
    needs: [build]
    name: Push Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Login, Tag and Push Docker image
        run: |
          aws ecr get-login-password --region <aws-region> \
          docker login --username AWS --password-stdin <your-aws-account-id>.dkr.ecr.us-west-2.amazonaws.com \
          docker tag my-image-name:$(date +%s) <your-aws-account-id>.dkr.ecr.us-west-2.amazonaws.com/my-image-name:latest \
          docker push <your-aws-account-id>.dkr.ecr.us-west-2.amazonaws.com/my-image-name:latest

  deploy:
    needs: [build, push]
    name: Deploy Flask App (ECS)
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Deploy to AWS ECS
        run: |
          aws ecs update-service --cluster <your-cluster-name> --service <your-service-name> --force-new-deployment

  notify:
    needs: [build, push, deploy]
    name: Notify Platform Team
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Send notifications
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: <your-slack-channel-id>
          slack-message: "New Docker image has been pushed to AWS ECR"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
